{"version":3,"sources":["assets/bg.jpg","component/login/textfield.js","baseUrl/baseURL.js","redux/action/reduxAction.js","component/login/login.js","component/signup/textfield.js","component/signup/signup.js","component/user/dashboard.js","component/user/booking.js","component/user/viewbooking.js","component/admin/adminDash.js","config/firebase.js","component/admin/areas.js","component/router/logout.js","component/router/navbar.js","component/router/route.js","App.js","redux/reducer/reducers.js","redux/reducer/index.js","redux/store/store.js","index.js"],"names":["TextField","label","props","useField","field","meta","className","htmlFor","name","touched","error","autoComplete","component","url","window","location","href","split","user","data","type","payload","Login","useState","msg","setMsg","msgClass","setMsgClass","log","setLog","dispatch","useDispatch","validate","Yup","email","required","password","min","style","backgroundImage","background","height","width","backgroundRepeat","backgroundSize","backgroundPosition","initialValues","validationSchema","onSubmit","values","loginData","toLowerCase","axios","method","withCredentials","then","res","status","message","loginStatus","loginUser","role","setTimeout","catch","err","console","formik","color","backgroundColor","to","Signup","firstName","max","lastName","phone","matches","marginTop","onSubmitProps","userData","resetForm","Dashboard","setData","useEffect","map","value","i","src","imgUrl","alt","desc","pathname","onClick","localStorage","setItem","JSON","stringify","Booking","valData","setValData","startDay","setStartDay","endDay","setEndDay","startTime","setStartTime","endTime","setEndTime","slot","setSlot","setErr","slotBtn","setSlotBtn","bookBtn","setBookBtn","vSlot","setVSlot","parse","getItem","count","slots","push","startDate","Date","endDate","t","toLocaleTimeString","t1","moment","valSlot","find","val","ind","stdb","etdb","stu","etu","isBetween","toLocaleDateString","Number","findSlots","filter","indexOf","handleSubmit","e","target","boxShadow","preventDefault","Swal","fire","icon","title","text","diff","format","onChange","fontSize","undefined","ViewBooking","scope","length","index","AdminDashboard","overflow","id","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","result","isConfirmed","reload","dismiss","DismissReason","cancel","delt","_id","imageUrl","imageWidth","imageHeight","imageAlt","firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Storage","storage","AddArea","setUrl","document","getElementById","imgURl","placeholder","rows","event","images","files","now","ref","put","snapshot","position","showConfirmButton","timer","bytesTransferred","totalBytes","getDownloadURL","URL","Logout","useData","useSelector","state","addUser","history","useHistory","textTransform","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","RouterConfig","profile","exact","path","AdminDasboard","App","initialState","action","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode"],"mappings":"mLAAe,MAA0B,+B,+BCG5BA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,yBAChD,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,QAASH,EAAMI,KAAtB,SAA6BP,IAC7B,2DACEK,UAAS,mCAA8BD,EAAKI,SAAWJ,EAAKK,OAAS,eACjEN,GAAWF,GAFjB,IAGES,aAAa,SAEf,cAAC,IAAD,CAAcC,UAAU,MAAMJ,KAAMJ,EAAMI,KAAMF,UAAU,c,wBCb5DO,EAAMC,OAAOC,SAASC,KAAKC,MAAM,KAOtBJ,EALXA,EADW,UAAXA,EAAI,GACE,0CAGA,wB,QCLGK,EAAO,SAACC,GACjB,MAAM,CACFC,KAAM,WACNC,QAASF,ICuIFG,MAhIf,WACE,MAAsBC,qBAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsBJ,oBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEMC,EAAWC,cACXC,EAAWC,IAAW,CAC1BC,MAAOD,MAAaC,MAAM,oBAAoBC,SAAS,qBACvDC,SAAUH,MACPI,IAAI,EAAG,yCACPF,SAAS,0BAEd,OACE,qBACEG,MAAO,CACLC,gBAAgB,OAAD,OAASC,EAAT,KACfC,OAAQ,QACRC,MAAO,OACPC,iBAAkB,YAClBC,eAAgB,QAChBC,mBAAoB,UAPxB,SAUE,qBAAKvC,UAAU,aAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBACEA,UAAU,mDACVgC,MAAO,CAAEI,MAAO,OAAQD,OAAQ,SAFlC,SAIE,qBAAKnC,UAAU,8BAAf,SACE,cAAC,IAAD,CACEwC,cAAe,CACbZ,MAAO,GACPE,SAAU,IAEZW,iBAAkBf,EAClBgB,SAAU,SAACC,GACT,IAAMC,EAAY,CAChBhB,MAAOe,EAAOf,MAAMiB,cACpBf,SAAUa,EAAOb,UAEnBP,GAAO,GACPuB,IAAM,CACJC,OAAQ,OACRxC,IAAKA,EAAM,SACXM,KAAM+B,EACNI,iBAAiB,IAEhBC,MAAK,SAACC,GACmB,MAApBA,EAAIrC,KAAKsC,QACX9B,EAAY,iBACZF,EAAO+B,EAAIrC,KAAKuC,SAChB5B,EACEZ,EAAK,CACHyC,aAAa,EACbC,UAAWJ,EAAIrC,KAAKD,KACpB2C,KAAML,EAAIrC,KAAKD,KAAK2C,UAKxBlC,EAAY,gBACZE,GAAO,GACPJ,EAAO+B,EAAIrC,KAAKuC,SAChBI,YAAW,WACTrC,EAAO,MACN,SAGNsC,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,OAxCpB,SA4CG,SAACE,GAAD,OACC,gCACE,oBACE5D,UAAU,mCACVgC,MAAO,CAAE6B,MAAO,WAFlB,mBAMA,eAAC,IAAD,WACE,cAAC,EAAD,CAAWlE,MAAM,QAAQO,KAAK,QAAQY,KAAK,UAC3C,cAAC,EAAD,CACEnB,MAAM,WACNO,KAAK,WACLY,KAAK,aAEP,wBACEd,UAAU,iBACVgC,MAAO,CAAEI,MAAO,OAAQ0B,gBAAiB,WACzChD,KAAK,SAHP,SAKGQ,EACC,qBAAKtB,UAAU,mBAAf,SACE,qBACEA,UAAU,iBACVgC,MAAO,CAAEI,MAAO,GAAID,OAAQ,IAC5BoB,KAAK,SAHP,SAKE,sBAAMvD,UAAU,UAAhB,4BAIJ,8CAIN,oBAAGA,UAAU,OAAb,sCAC2B,cAAC,IAAD,CAAM+D,GAAG,IAAT,oBAA2B,OAErD7C,EACC,qBAAKlB,UAAS,gBAAWoB,GAAYmC,KAAK,QAA1C,SACGrC,IAED,sBC3HXxB,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUC,EAAY,yBAChD,EAAsBC,YAASD,GAA/B,mBAAOE,EAAP,KAAcC,EAAd,KACA,OACE,sBAAKC,UAAU,OAAf,UACE,uBAAOC,QAASH,EAAMI,KAAtB,SAA6BP,IAC7B,2DACEK,UAAS,mCAA8BD,EAAKI,SAAWJ,EAAKK,OAAS,eACjEN,GAAWF,GAFjB,IAGES,aAAa,SAEf,cAAC,IAAD,CAAcC,UAAU,MAAMJ,KAAMJ,EAAMI,KAAMF,UAAU,cCiGjDgE,MAtGf,WACE,IACA,EAAsB/C,qBAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAgCF,qBAAhC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAsBJ,oBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KAEMG,EAAWC,IAAW,CAC1BsC,UAAWtC,MACRuC,IAAI,GAAI,iCACRrC,SAAS,YACZsC,SAAUxC,MACPuC,IAAI,GAAI,iCACRrC,SAAS,YACZD,MAAOD,MACJC,MAAM,oBACNC,SAAS,qBACZuC,MAAOzC,MAAa0C,QAfF,0GAeuB,6BACzCvC,SAAUH,MACPI,IAAI,EAAG,yCACPF,SAAS,0BAEd,OACE,qBAAKG,MAAO,CACVC,gBAAgB,OAAD,OAASC,EAAT,KACfC,OAAQ,QAASC,MAAO,OAAQC,iBAAkB,YAClDC,eAAgB,QAASC,mBAAoB,UAH/C,SAKE,qBAAKvC,UAAU,aAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,mDAAmDgC,MAAO,CAAEI,MAAO,OAAQD,OAAQ,SAAlG,SACE,qBAAKnC,UAAU,8BAA8BgC,MAAO,CAAEsC,UAAW,QAAjE,SACE,cAAC,IAAD,CACE9B,cAAe,CACbyB,UAAW,GACXE,SAAU,GACVvC,MAAO,GACPwC,MAAO,GACPtC,SAAU,IAEZW,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQ4B,GACjB,IAAMC,EAAW,CACfP,UAAWtB,EAAOsB,UAClBE,SAAUxB,EAAOwB,SACjBvC,MAAOe,EAAOf,MAAMiB,cACpBuB,MAAOzB,EAAOyB,MACdtC,SAAUa,EAAOb,UAEnBP,GAAO,GACPuB,IAAM,CACJC,OAAQ,OACRxC,IAAKA,EAAM,UACXM,KAAM2D,EACNxB,iBAAiB,IAChBC,MAAK,SAACC,GACiB,MAApBA,EAAIrC,KAAKsC,QACX9B,EAAY,iBACZF,EAAO+B,EAAIrC,KAAKuC,SAChBmB,EAAcE,YACdlD,GAAO,KAEPF,EAAY,gBACZF,EAAO+B,EAAIrC,KAAKuC,SAChBI,YAAW,WACTrC,EAAO,MACN,SAEJsC,OAAM,SAACC,GACRC,QAAQrC,IAAIoC,OArClB,SAyCG,SAAAE,GAAM,OACL,gCACE,oBAAI5D,UAAU,mCAAmCgC,MAAO,CAAE6B,MAAO,WAAjE,qBACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAWlE,MAAM,aAAaO,KAAK,YAAYY,KAAK,SACpD,cAAC,EAAD,CAAWnB,MAAM,YAAYO,KAAK,WAAWY,KAAK,SAClD,cAAC,EAAD,CAAWnB,MAAM,QAAQO,KAAK,QAAQY,KAAK,UAC3C,cAAC,EAAD,CAAWnB,MAAM,QAAQO,KAAK,QAAQY,KAAK,SAC3C,cAAC,EAAD,CAAWnB,MAAM,WAAWO,KAAK,WAAWY,KAAK,aACjD,wBAAQd,UAAU,uBAAuBgC,MAAO,CAAE8B,gBAAiB,WAAahD,KAAK,SAArF,SACGQ,EAAM,qBAAKtB,UAAU,mBAAf,SACL,qBAAKA,UAAU,iBAAiBgC,MAAO,CAAEI,MAAO,GAAID,OAAQ,IAAMoB,KAAK,SAAvE,SACE,sBAAMvD,UAAU,UAAhB,4BAEK,iDAGb,oBAAGA,UAAU,OAAb,sCAA6C,cAAC,IAAD,CAAM+D,GAAG,SAAT,mBAA7C,OACC7C,EAAM,qBAAKlB,UAAS,gBAAWoB,GAAYmC,KAAK,QAA1C,SAAmDrC,IAAa,sBChD5EwD,MA9Cf,WACI,MAAuBzD,mBAAS,IAAhC,mBAAOJ,EAAP,KAAY8D,EAAZ,KAgBA,OAfAC,qBAAU,WACN9B,IAAM,CACFC,OAAQ,MACRxC,IAAKA,EAAM,gBACXyC,iBAAiB,IAClBC,MAAK,SAACC,GACa,MAAfA,EAAIC,OACHwB,EAAQzB,EAAIrC,KAAKA,MAEjB8C,QAAQrC,IAAI4B,MAEjBO,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,QAElB,IAEE,8BACI,qBAAK1D,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SAEQa,EAAKgE,KAAI,SAACC,EAAOC,GACb,OACI,qBAAK/E,UAAU,WAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKgF,IAAKF,EAAMG,OAAQjF,UAAU,eAAekF,IAAI,MAAMlD,MAAO,CAACG,OAAQ,OAC3E,sBAAKnC,UAAU,YAAf,UACI,oBAAIA,UAAU,6BAA6BgC,MAAO,CAAE6B,MAAO,WAA3D,SAAyEiB,EAAMrE,WAC/E,mBAAGT,UAAU,YAAb,SAA0B8E,EAAMK,OAChC,cAAC,IAAD,CAAMpB,GAAI,CACNqB,SAAU,YAEXpF,UAAU,iBAAiBgC,MAAO,CAAC8B,gBAAiB,WAAYuB,QAAS,kBAAIC,aAAaC,QAAQ,OAAOC,KAAKC,UAAUX,KAH3H,4BANmBC,a,iCC2RhDW,MAlTf,SAAiB9F,GAef,IAdA,MAA8BqB,mBAAS,IAAvC,mBAAO0E,EAAP,KAAgBC,EAAhB,KACA,EAAgC3E,mBAAS,IAAzC,mBAAO4E,EAAP,KAAiBC,EAAjB,KACA,EAA4B7E,mBAAS,IAArC,mBAAO8E,EAAP,KAAeC,EAAf,KACA,EAAkC/E,mBAAS,IAA3C,mBAAOgF,EAAP,KAAkBC,EAAlB,KACA,EAA8BjF,mBAAS,IAAvC,mBAAOkF,EAAP,KAAgBC,EAAhB,KACA,EAAwBnF,qBAAxB,mBAAOoF,EAAP,KAAaC,EAAb,KACA,EAAsBrF,mBAAS,IAA/B,mBAAOyC,EAAP,KAAY6C,EAAZ,KACA,EAA8BtF,oBAAS,GAAvC,mBAAOuF,EAAP,KAAgBC,EAAhB,KACA,EAA8BxF,oBAAS,GAAvC,mBAAOyF,EAAP,KAAgBC,EAAhB,KACA,EAAsB1F,oBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACA,EAA0BN,oBAAS,GAAnC,mBAAO2F,EAAP,KAAcC,EAAd,KACMhG,EAAO2E,KAAKsB,MAAMxB,aAAayB,QAAQ,SAEvCC,EAAQ,GACLjC,GAAI,EAAGA,IAAKlE,EAAKoG,MAAOlC,KAC/BiC,EAAME,KAAKnC,IAGb,IAAIoC,GAAY,IAAIC,KAAKvB,EAAW,IAAMI,GACtCoB,GAAU,IAAID,KAAKrB,EAAS,IAAMI,GAsClCmB,GAAI,IAAIF,KAAKD,IAAWI,qBACxBC,GAAK,IAAIJ,KAAKC,IAASE,qBAC3BD,GAAIG,IAAOH,GAAG,QACdE,GAAKC,IAAOD,GAAI,QAwDhB,IAAIE,GAAU,GACd/B,EAAQgC,MAAK,SAACC,EAAKC,GACjB,IAAMC,EAAOL,IAAO,IAAIL,KAAKQ,EAAIT,WAAWI,qBAAsB,SAC5DQ,EAAON,IAAO,IAAIL,KAAKQ,EAAIP,SAASE,qBAAsB,SAC1DS,EAAMP,IAAO,IAAIL,KAAKD,IAAWI,qBAAsB,SACvDU,EAAMR,IAAO,IAAIL,KAAKC,IAASE,qBAAsB,UAExDQ,EAAKG,UAAUF,EAAKC,EAAK,KAAM,OAC9BH,EAAKI,UAAUF,EAAKC,EAAK,KAAM,SAChCR,IAAO,IAAIL,KAAKQ,EAAIT,WAAWgB,sBAAsBD,UACpD,IAAId,KAAKD,IAAWgB,qBACpB,IAAIf,KAAKC,IAASc,qBAClB,KACA,OAEAV,IAAO,IAAIL,KAAKQ,EAAIP,SAASc,sBAAsBD,UACjD,IAAId,KAAKD,IAAWgB,qBACpB,IAAIf,KAAKC,IAASc,qBAClB,KACA,QAGJT,GAAQR,KAAKkB,OAAOR,EAAIvB,UAG1B,IAAIgC,GAAYrB,EAAMsB,QAAO,SAACV,GAC1B,OAAOF,GAAQa,QAAQX,GAAO,KAEpC,SAASY,GAAaC,GACpB9E,QAAQrC,IAAImH,EAAEC,OAAOxI,MACC,aAAlBuI,EAAEC,OAAOxI,KACX4F,EAAY2C,EAAEC,OAAO5D,OACM,cAAlB2D,EAAEC,OAAOxI,KAClBgG,EAAauC,EAAEC,OAAO5D,OACK,YAAlB2D,EAAEC,OAAOxI,KAClBkG,EAAWqC,EAAEC,OAAO5D,OAEpBkB,EAAUyC,EAAEC,OAAO5D,OAErB+B,GAAS,GACTJ,GAAW,GACXE,GAAW,GAEb,OACE,qBAAK3G,UAAU,YAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,sBACEA,UAAU,mCACVgC,MAAO,CAAE2G,UAAW,iBAFtB,UAIE,oBAAI3I,UAAU,mCAAd,SAAkDa,EAAKJ,WACvD,uBAAMiC,SA1Gd,SAAsB+F,GACpBA,EAAEG,iBACEnB,IAAO5B,GAAY4B,IAAO1B,GAC5B8C,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM,wDAEC9C,EAAUF,EACnB4C,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM,+CAGDzB,GAAG0B,KAAK5B,GAAG,YAAc,GAChCuB,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM,wCAIR1H,GAAO,GACPuB,IAAM,CACJC,OAAQ,OACRxC,IAAKA,EAAM,gBACXM,KAAM,CACJsG,UAAWiB,OAAOjB,IAClBE,QAASe,OAAOf,IAChB5G,SAAUI,EAAKJ,UAEjBuC,iBAAiB,IAEhBC,MAAK,SAACC,GACmB,MAApBA,EAAIrC,KAAKsC,QACX5B,GAAO,GACPqE,EAAW1C,EAAIrC,KAAKA,MACpBgG,GAAS,GACTJ,GAAW,GACXE,GAAW,KAEXf,EAAW,IACXrE,GAAO,GACPsF,GAAS,GACTJ,GAAW,GACXE,GAAW,OAGdlD,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,QAwDZ,UACE,sBAAK1D,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,8CACA,uBACEc,KAAK,OACLd,UAAU,eACV+B,IAAK0F,MAAS0B,OAAO,cACrBrE,MAAOe,EACPhE,UAAQ,EACRuH,SAAUZ,GACVtI,KAAK,gBAGT,sBAAKF,UAAU,MAAf,UACE,4CACA,uBACEc,KAAK,OACLd,UAAU,eACV+B,IAAK0F,MAAS0B,OAAO,cACrBrE,MAAOiB,EACPlE,UAAQ,EACRuH,SAAUZ,GACVtI,KAAK,iBAIX,sBAAKF,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACE,+CACA,uBACEc,KAAK,OACLd,UAAU,eACV+B,IACE0F,MAAS0B,OAAO,gBAAkBtD,EAC9B4B,MAAS0B,OAAO,SAChB,KAENrE,MAAOmB,EACPpE,UAAQ,EACRuH,SAAUZ,GACVtI,KAAK,iBAGT,sBAAKF,UAAU,MAAf,UACE,6CACA,uBACEc,KAAK,OACLd,UAAU,eACV+B,IACE0F,MAAS0B,OAAO,gBAAkBtD,EAC9B4B,MAAS0B,OAAO,SAChB,KAENtH,UAAQ,EACRuH,SAAUZ,GACVtI,KAAK,kBAIX,qBAAKF,UAAU,MAAf,SACE,sBAAKA,UAAU,MAAf,UACG4G,EACC,qCACE,iDACA,yBACE5G,UAAU,eACV6B,UAAQ,EACRuH,SAAU,SAACX,GAAD,OAAOnC,EAAQmC,EAAEC,OAAO5D,QAHpC,UAKE,kDACCuD,GAAUxD,KAAI,SAAC+C,EAAKC,GACnB,OACE,yBAAQ/C,MAAO8C,EAAf,kBACQA,IADiBC,YAO/B,KACHnE,EACC,mBAAG1D,UAAU,cAAcgC,MAAO,CAAEqH,SAAU,IAA9C,SACG3F,IAED,UAGPgD,EACC,wBACE1G,UAAU,4BACVgC,MAAO,CAAE8B,gBAAiB,WAC1BhD,KAAK,SACLuE,QAhPd,WACW,KAATgB,QAAwBiD,IAATjD,EAAqBE,EAAO,YAAchF,GAAO,GAChEuB,IAAM,CACJC,OAAQ,OACRxC,IAAKA,EAAM,WACXM,KAAM,CACJJ,SAAUI,EAAKJ,SACf0G,UAAWiB,OAAOjB,IAClBE,QAASe,OAAOf,IAChBhB,KAAMA,GAERrD,iBAAiB,IAEhBC,MAAK,SAACC,GACmB,MAApBA,EAAIrC,KAAKsC,QACXQ,QAAQrC,IAAI4B,EAAIrC,KAAKuC,SACrByF,IAAKC,KAAK,kBAAmB5F,EAAIrC,KAAKuC,QAAS,WAC/CyD,GAAS,GACTJ,GAAW,GACXE,GAAW,GACXP,EAAW,IACXN,EAAY,IACZI,EAAa,IACbF,EAAU,IACVzE,GAAO,IAEPsH,IAAKC,KAAK,CACRC,KAAM,QACNC,MAAO,UACPC,KAAM/F,EAAIrC,KAAKuC,aAIpBK,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,OA0MN,SAMGpC,EACC,qBAAKtB,UAAU,mBAAf,SACE,qBACEA,UAAU,iBACVgC,MAAO,CAAEI,MAAO,GAAID,OAAQ,IAC5BoB,KAAK,SAHP,SAKE,sBAAMvD,UAAU,UAAhB,4BAIJ,0CAGF,KACHwG,EACC,wBACExG,UAAU,4BACVgC,MAAO,CAAE8B,gBAAiB,WAC1BhD,KAAK,SAHP,SAKGQ,EACC,qBAAKtB,UAAU,mBAAf,SACE,qBACEA,UAAU,iBACVgC,MAAO,CAAEI,MAAO,GAAID,OAAQ,IAC5BoB,KAAK,SAHP,SAKE,sBAAMvD,UAAU,UAAhB,4BAIJ,+CAGF,gBCpPDuJ,MAxDf,WACI,MAAwBtI,mBAAS,IAAjC,mBAAOJ,EAAP,KAAa8D,EAAb,KAaA,OAXAC,qBAAU,WACN9B,IAAM,CACFC,OAAQ,MACRxC,IAAKA,EAAM,eACXyC,iBAAiB,IAClBC,MAAK,SAACC,GACLyB,EAAQzB,EAAIrC,KAAKA,SAClB4C,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,QAEjB,IAEC,8BACI,qBAAK1D,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SACI,wBAAOA,UAAU,QAAjB,UACI,uBAAOgC,MAAO,CAAE8B,gBAAiB,UAAWD,MAAO,QAAnD,SACI,+BACI,oBAAI2F,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,uBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,wBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,2BAIQ,IAAhB3I,EAAK4I,OAAc,yDACf5I,GAAQA,EAAKgE,KAAI,SAACC,EAAO4E,GACrB,OACI,gCACI,+BACI,oBAAIF,MAAM,MAAV,SAAiBE,EAAQ,IACzB,oBAAI1J,UAAU,kBAAd,SAAiC8E,EAAMb,UAAY,IAAMa,EAAMX,WAC/D,uCAAUW,EAAMuB,QAChB,6BAAK,IAAIe,KAAKtC,EAAMqC,WAAWgB,uBAC/B,6BAAK,IAAIf,KAAKtC,EAAMuC,SAASc,uBAC7B,6BAAK,IAAIf,KAAKtC,EAAMqC,WAAWI,uBAC/B,6BAAK,IAAIH,KAAKtC,EAAMuC,SAASE,uBAC7B,oBAAIvH,UAAU,kBAAd,SAAiC8E,EAAMrE,eATnCiJ,gBCyEjCC,MA1Gf,WACI,MAAwB1I,mBAAS,IAAjC,mBAAOJ,EAAP,KAAa8D,EAAb,KAgEA,OA9DAC,qBAAU,WACN9B,IAAM,CACFC,OAAQ,MACRxC,IAAKA,EAAM,gBACXyC,iBAAiB,IAClBC,MAAK,SAACC,GACc,MAAfA,EAAIC,OACJwB,EAAQzB,EAAIrC,KAAKA,MAEjB8C,QAAQrC,IAAI4B,MAEjBO,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,QAEjB,IAiDC,8BACI,qBAAK1D,UAAU,YAAf,SACI,qBAAKA,UAAU,WAAf,SAEQa,EAAKgE,KAAI,SAACC,EAAOC,GACb,OACI,qBAAK/E,UAAU,WAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKgF,IAAKF,EAAMG,OAAQjF,UAAU,eAAekF,IAAI,MACjDlD,MAAO,CAAEG,OAAQ,IAAKyH,SAAU,YACpC,sBAAK5J,UAAU,YAAf,UACI,oBAAIA,UAAU,6BACVgC,MAAO,CAAE6B,MAAO,WADpB,SACkCiB,EAAMrE,WAExC,uCAAUqE,EAAMmC,SAChB,wBAAQjH,UAAU,iBAAiBqF,QAAS,kBA9DpF,SAAcwE,GACV,IAAMC,EAA2BjB,IAAKkB,MAAM,CACxCC,YAAa,CACTC,cAAe,kBACfC,aAAc,kBAElBC,gBAAgB,IAGpBL,EAAyBhB,KAAK,CAC1BE,MAAO,gBACPC,KAAM,oCACNF,KAAM,UACNqB,kBAAkB,EAClBC,kBAAmB,kBACnBC,iBAAkB,cAClBC,gBAAgB,IACjBtH,MAAK,SAACuH,GACDA,EAAOC,YACP3H,IAAM,CACFC,OAAQ,OACRxC,IAAKA,EAAM,kBACXM,KAAM,CAAEgJ,GAAIA,GACZ7G,iBAAiB,IAClBC,MAAK,SAACC,GACL4G,EAAyBhB,KACrB,WACA,8BACA,WAEJtI,OAAOC,SAASiK,QAAO,MACxBjH,OAAM,SAACC,GACNC,QAAQrC,IAAIoC,MAIhB8G,EAAOG,UAAY9B,IAAK+B,cAAcC,QAEtCf,EAAyBhB,KACrB,YACA,iCACA,YAqB0EgC,CAAKhG,EAAMiG,MAA7D,oBACA,wBAAQ/K,UAAU,oBAAoBqF,QAAS,WAC3C,OACIwD,IAAKC,KAAK,CACNE,MAAOlE,EAAMrE,SACbwI,KAAMnE,EAAMK,KACZ6F,SAAUlG,EAAMG,OAChBgG,WAAY,IACZC,YAAa,IACbC,SAAU,kBARtB,4BAVmBpG,a,eClE/DqG,IAAYC,cATS,CACjBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,cACnBC,MAAO,6CAKX,IAEeC,EAFDR,IAAYS,UCiFXC,MAzFf,WACI,MAAyB7K,qBAAzB,mBAAOgE,EAAP,KAAe8G,EAAf,KAmDA,OACI,qBAAK/L,UAAU,YAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,oBAAIA,UAAU,mBAAd,+BACA,qBAAKA,UAAU,mCAAmCgC,MAAO,CAAE2G,UAAW,iBAAtE,SACQ,uBAAMjG,SAvD1B,SAAoB+F,GAChBA,EAAEG,iBACF9F,IAAM,CACFC,OAAQ,OACRxC,IAAKA,EAAM,kBACXM,KAAM,CACFJ,SAAUuL,SAASC,eAAe,YAAYnH,MAC9CmC,MAAO+E,SAASC,eAAe,SAASnH,MACxCK,KAAM6G,SAASC,eAAe,QAAQnH,MACtCoH,OAAQjH,GAEZjC,iBAAiB,IAClBC,MAAK,SAACC,GACLS,QAAQrC,IAAI4B,GACY,MAApBA,EAAIrC,KAAKsC,OACT0F,IAAKC,KACD,kBACA5F,EAAIrC,KAAKuC,QACT,WAGJyF,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,UACPC,KAAM/F,EAAIrC,KAAKuC,aAGxBK,OAAM,SAACC,GAAD,MAAS,CACdC,QAAQrC,IAAIoC,QA2BA,UACA,sBAAK1D,UAAU,MAAf,UACI,sBAAKA,UAAU,MAAf,UACI,6CACA,uBAAOc,KAAK,OAAOqL,YAAY,WAAWnM,UAAU,eAAe6J,GAAG,WAAWhI,UAAQ,OAE7F,sBAAK7B,UAAU,MAAf,UACI,0CACA,uBAAOc,KAAK,SAASqL,YAAY,QAAQnM,UAAU,eAAe6J,GAAG,QAAQhI,UAAQ,UAG7F,qBAAK7B,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,gDACA,0BAAUA,UAAU,eAAemM,YAAY,cAActK,UAAQ,EAACgI,GAAG,OAAOuC,KAAK,WAG7F,qBAAKpM,UAAU,MAAf,SACI,sBAAKA,UAAU,MAAf,UACI,+CACA,uBAAOc,KAAK,OAAOd,UAAU,eAC7BoJ,SA5CP,SAACiD,GAClB,IAAIC,EAASD,EAAM3D,OAAO6D,MAAM,GAC1BrM,EAAKkH,KAAKoF,MAChBZ,EAAQa,IAAI,WAAaH,EAAOpM,GAC3BwM,IAAIJ,GACJrJ,MAAK,SAAC0J,GACH9D,IAAKC,KAAK,CACN8D,SAAU,SACV5D,MAAO,qBACP6D,mBAAmB,EACnBC,MAAO,MAEKH,EAASI,iBAAmBJ,EAASK,WACrDL,EAASF,IAAIQ,iBAAiBhK,MAAK,SAACiK,GAChCnB,EAAOmB,UA8B8BrL,UAAQ,SAGzC,wBAAQ7B,UAAU,sBAAsBgC,MAAO,CAAE8B,gBAAiB,WAAahD,KAAK,SAApF,4BCrDTqM,MA3Bf,WACI,IAAM3L,EAAWC,cACX2L,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WACrCC,EAAUC,cAgBhB,OACI,sBAAKzN,UAAU,wBAAf,UACI,sBAAMA,UAAU,kBAAkBgC,MAAO,CAAC0L,cAAe,cAAzD,SAAyEN,EAAQ9J,UAAUW,YAC3F,wBAAQjE,UAAU,iBAAiBqF,QAlB3C,WACIvC,IAAM,CACFC,OAAQ,MACRxC,IAAK2M,EAAI,UACTlK,iBAAiB,IAClBC,MAAK,WACJzB,EAASZ,EAAK,CACVyC,aAAa,EACbE,KAAM,QAEViK,EAAQtG,KAAK,aACd,SAAC9G,GACAuD,QAAQrC,IAAIlB,OAMZ,wBCyBGuN,MAjDf,WACE,IAAMP,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WAC7C,OACE,qBAAKvL,MAAO,CAAE8B,gBAAiB,WAA/B,SACE,qBAAK9D,UAAU,YAAf,SACE,sBAAKA,UAAU,qCAAf,UACE,mBAAGA,UAAU,0BAAb,yBACA,wBACEA,UAAU,iBACVc,KAAK,SACL8M,cAAY,WACZC,cAAY,sBACZC,gBAAc,qBACdC,gBAAc,QACdC,aAAW,oBAPb,SASE,sBAAMhO,UAAU,0BAElB,qBAAKA,UAAU,2BAA2B6J,GAAG,qBAA7C,SACoB,SAAjBuD,EAAQ7J,KACP,sBAAKvD,UAAU,aAAf,UACE,cAAC,IAAD,CAAM+D,GAAG,IAAI/D,UAAU,sCAAvB,mBAGA,cAAC,IAAD,CACE+D,GAAG,eACH/D,UAAU,+BAFZ,6BAOiB,UAAjBoN,EAAQ7J,KACV,sBAAKvD,UAAU,aAAf,UACE,cAAC,IAAD,CAAM+D,GAAG,IAAI/D,UAAU,sCAAvB,mBAGA,cAAC,IAAD,CAAM+D,GAAG,WAAW/D,UAAU,+BAA9B,yBAIA,OAEN,cAAC,EAAD,YCmDKiO,MAlFf,WAEI,IAAMb,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,WACvC/L,EAAWC,cA0BjB,OAzBAmD,qBAAU,WAoBN,OAnBA9B,IAAM,CACFC,OAAQ,MACRxC,IAAKA,EAAG,WACRyC,iBAAiB,IAEhBC,MAAK,SAACC,GACqB,MAApBA,EAAIrC,KAAKsC,QACT3B,EAASZ,EAAK,CACV0C,UAAWJ,EAAIrC,KAAKqN,QACpB7K,aAAa,EACbE,KAAML,EAAIrC,KAAKqN,QAAQ3K,WAIlCE,OAAM,SAACC,GACAA,GACAlC,EAASZ,EAAK,CAAEyC,aAAa,QAGlC,WACHM,QAAQrC,IAAI,cAEjB,CAACE,IAEsB,OAAtB4L,EAAQ9J,UAEJ,qBAAKtD,UAAU,YAAf,SACI,qBAAKA,UAAU,oDAAoDgC,MAAO,CAAEI,MAAO,OAAQD,OAAQ,SAAnG,SACI,qBAAKnC,UAAU,kBAAkBuD,KAAK,SAAtC,SACI,sBAAMvD,UAAU,UAAhB,8BAQhB,eAAC,IAAD,YAC6B,IAAxBoN,EAAQ/J,YACL,8BACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO8K,OAAK,EAACC,KAAK,IAAI9N,UAAW0D,IACjC,cAAC,IAAD,CAAOoK,KAAK,SAAS9N,UAAWU,IAChC,cAAC,IAAD,CAAOoN,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUrK,GAAG,aAGhB,KAEK,SAAjBqJ,EAAQ7J,KACL,qCACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4K,OAAK,EAACC,KAAK,IAAI9N,UAAWoE,IACjC,cAAC,IAAD,CAAO0J,KAAK,WAAW9N,UAAWoF,IAClC,cAAC,IAAD,CAAO0I,KAAK,eAAe9N,UAAWiJ,IACtC,cAAC,IAAD,CAAO6E,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUrK,GAAG,cAGnB,KAEQ,UAAjBqJ,EAAQ7J,KACL,qCACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4K,OAAK,EAACC,KAAK,IAAI9N,UAAW+N,IACjC,cAAC,IAAD,CAAOD,KAAK,WAAW9N,UAAWwL,IAClC,cAAC,IAAD,CAAOsC,KAAK,IAAZ,SACI,cAAC,IAAD,CAAUrK,GAAG,cAGnB,SCpFPuK,MANf,WACE,OACI,cAAC,EAAD,K,iBCJFC,EAAe,CACfjL,UAAW,KACXD,aAAa,EACbE,KAAM,MAaKgK,EAXC,WAAkC,IAAjCD,EAAgC,uDAAxBiB,EAAcC,EAAU,uCAC7C,OAAOA,EAAO1N,MACV,IAAK,WACL,sBACO0N,EAAOzN,SAGd,QAAS,OAAOuM,ICLTmB,EAJKC,YAAgB,CAChCnB,YCEWoB,EAFDC,YAAYH,GCE1BI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJ3C,SAASC,eAAe,W","file":"static/js/main.4cca44ca.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.fa917832.jpg\";","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\r\n        {...field} {...props}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  )\r\n}","var url = window.location.href.split(\":\");\r\nif (url[0] === \"https\") {\r\n    url = 'https://parking-app-react.herokuapp.com'\r\n}\r\nelse {\r\n    url = \"http://localhost:4000\"\r\n}\r\nexport default url;","export const user = (data) =>{\r\n    return{\r\n        type: \"ADD_USER\",\r\n        payload: data\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport background from \"../../assets/bg.jpg\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { TextField } from \"./textfield\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport url from \"../../baseUrl/baseURL\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { user } from \"../../redux/action/reduxAction\";\r\nfunction Login() {\r\n  const [msg, setMsg] = useState();\r\n  const [msgClass, setMsgClass] = useState();\r\n  const [log, setLog] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const validate = Yup.object({\r\n    email: Yup.string().email(\"Email is invalid\").required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(6, \"Password must be at least 6 charaters\")\r\n      .required(\"Password is required\"),\r\n  });\r\n  return (\r\n    <div\r\n      style={{\r\n        backgroundImage: `url(${background})`,\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"container \">\r\n        <div className=\"row\">\r\n          <div\r\n            className=\"d-flex justify-content-center align-items-center\"\r\n            style={{ width: \"100%\", height: \"100vh\" }}\r\n          >\r\n            <div className=\"col-md-5 bg-white px-5 pb-3\">\r\n              <Formik\r\n                initialValues={{\r\n                  email: \"\",\r\n                  password: \"\",\r\n                }}\r\n                validationSchema={validate}\r\n                onSubmit={(values) => {\r\n                  const loginData = {\r\n                    email: values.email.toLowerCase(),\r\n                    password: values.password,\r\n                  };\r\n                  setLog(true);\r\n                  axios({\r\n                    method: \"post\",\r\n                    url: url + \"/login\",\r\n                    data: loginData,\r\n                    withCredentials: true,\r\n                  })\r\n                    .then((res) => {\r\n                      if (res.data.status === 200) {\r\n                        setMsgClass(\"alert-success\");\r\n                        setMsg(res.data.message);\r\n                        dispatch(\r\n                          user({\r\n                            loginStatus: true,\r\n                            loginUser: res.data.user,\r\n                            role: res.data.user.role,\r\n                          })\r\n                        );\r\n                        // history.push('/dasboard')\r\n                      } else {\r\n                        setMsgClass(\"alert-danger\");\r\n                        setLog(false);\r\n                        setMsg(res.data.message);\r\n                        setTimeout(() => {\r\n                          setMsg(\"\");\r\n                        }, 3000);\r\n                      }\r\n                    })\r\n                    .catch((err) => {\r\n                      console.log(err);\r\n                    });\r\n                }}\r\n              >\r\n                {(formik) => (\r\n                  <div>\r\n                    <h1\r\n                      className=\"my-4 font-weight-bold .display-4\"\r\n                      style={{ color: \"#083144\" }}\r\n                    >\r\n                      Login\r\n                    </h1>\r\n                    <Form>\r\n                      <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                      <TextField\r\n                        label=\"Password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                      />\r\n                      <button\r\n                        className=\"btn text-white\"\r\n                        style={{ width: \"100%\", backgroundColor: \"#083144\" }}\r\n                        type=\"submit\"\r\n                      >\r\n                        {log ? (\r\n                          <div className=\"text-center mt-2\">\r\n                            <div\r\n                              className=\"spinner-border\"\r\n                              style={{ width: 20, height: 20 }}\r\n                              role=\"status\"\r\n                            >\r\n                              <span className=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                          </div>\r\n                        ) : (\r\n                          <span>Login</span>\r\n                        )}\r\n                      </button>\r\n                    </Form>\r\n                    <p className=\"mt-2\">\r\n                      Already have an account? <Link to=\"/\">Signup</Link>{\" \"}\r\n                    </p>\r\n                    {msg ? (\r\n                      <div className={`alert ${msgClass}`} role=\"alert\">\r\n                        {msg}\r\n                      </div>\r\n                    ) : null}\r\n                  </div>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport { ErrorMessage, useField } from 'formik';\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  return (\r\n    <div className=\"mb-2\">\r\n      <label htmlFor={field.name}>{label}</label>\r\n      <input\r\n        className={`form-control shadow-none ${meta.touched && meta.error && 'is-invalid'}`}\r\n        {...field} {...props}\r\n        autoComplete=\"off\"\r\n      />\r\n      <ErrorMessage component=\"div\" name={field.name} className=\"error\" />\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport background from '../../assets/bg.jpg'\r\nimport { Form, Formik } from 'formik'\r\nimport { TextField } from './textfield';\r\nimport { Link } from 'react-router-dom'\r\nimport * as Yup from \"yup\"\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nfunction Signup() {\r\n  const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/\r\n  const [msg, setMsg] = useState()\r\n  const [msgClass, setMsgClass] = useState()\r\n  const [log, setLog] = useState(false)\r\n\r\n  const validate = Yup.object({\r\n    firstName: Yup.string()\r\n      .max(15, 'Must be 15 characters or less')\r\n      .required('Required'),\r\n    lastName: Yup.string()\r\n      .max(20, 'Must be 20 characters or less')\r\n      .required('Required'),\r\n    email: Yup.string()\r\n      .email('Email is invalid')\r\n      .required('Email is required'),\r\n    phone: Yup.string().matches(phoneRegExp, 'Phone number is not valid'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 charaters')\r\n      .required('Password is required')\r\n  })\r\n  return (\r\n    <div style={{\r\n      backgroundImage: `url(${background})`,\r\n      height: \"100vh\", width: \"100%\", backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\", backgroundPosition: \"center\"\r\n    }}>\r\n      <div className='container '>\r\n        <div className='row'>\r\n          <div className='d-flex justify-content-center align-items-center' style={{ width: \"100%\", height: \"100vh\" }}>\r\n            <div className=\"col-md-5 bg-white px-5 pb-3\" style={{ marginTop: '40px' }}>\r\n              <Formik\r\n                initialValues={{\r\n                  firstName: '',\r\n                  lastName: '',\r\n                  email: '',\r\n                  phone: '',\r\n                  password: '',\r\n                }}\r\n                validationSchema={validate}\r\n                onSubmit={(values, onSubmitProps) => {\r\n                  const userData = {\r\n                    firstName: values.firstName,\r\n                    lastName: values.lastName,\r\n                    email: values.email.toLowerCase(),\r\n                    phone: values.phone,\r\n                    password: values.password\r\n                  }\r\n                  setLog(true)\r\n                  axios({\r\n                    method: 'post',\r\n                    url: url + \"/signup\",\r\n                    data: userData,\r\n                    withCredentials: true\r\n                  }).then((res) => {\r\n                    if (res.data.status === 200) {\r\n                      setMsgClass('alert-success')\r\n                      setMsg(res.data.message)\r\n                      onSubmitProps.resetForm()\r\n                      setLog(false)\r\n                    } else {\r\n                      setMsgClass('alert-danger')\r\n                      setMsg(res.data.message)\r\n                      setTimeout(() => {\r\n                        setMsg('')\r\n                      }, 3000)\r\n                    }\r\n                  }).catch((err) => {\r\n                    console.log(err)\r\n                  })\r\n                }}\r\n              >\r\n                {formik => (\r\n                  <div>\r\n                    <h1 className=\"my-4 font-weight-bold .display-4\" style={{ color: \"#083144\" }}>Sign Up</h1>\r\n                    <Form>\r\n                      <TextField label=\"First Name\" name=\"firstName\" type=\"text\" />\r\n                      <TextField label=\"Last Name\" name=\"lastName\" type=\"text\" />\r\n                      <TextField label=\"Email\" name=\"email\" type=\"email\" />\r\n                      <TextField label=\"Phone\" name=\"phone\" type=\"text\" />\r\n                      <TextField label=\"Password\" name=\"password\" type=\"password\" />\r\n                      <button className=\"btn text-white w-100\" style={{ backgroundColor: \"#083144\" }} type=\"submit\">\r\n                        {log ? <div className='text-center mt-2'>\r\n                          <div className=\"spinner-border\" style={{ width: 20, height: 20 }} role=\"status\">\r\n                            <span className=\"sr-only\">Loading...</span>\r\n                          </div>\r\n                        </div> : <span>Register</span>}\r\n                      </button>\r\n                    </Form>\r\n                    <p className=\"mt-2\">Already have an account? <Link to=\"/login\">Login</Link> </p>\r\n                    {msg ? <div className={`alert ${msgClass}`} role=\"alert\">{msg}</div> : null}\r\n                  </div>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup","import React ,{useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nfunction Dashboard() {\r\n    const [data,setData] = useState([])\r\n    useEffect(()=>{\r\n        axios({\r\n            method: 'get',\r\n            url: url + \"/getLocations\",\r\n            withCredentials: true \r\n        }).then((res)=>{\r\n            if(res.status === 200){\r\n                setData(res.data.data)\r\n            }else{\r\n                console.log(res)\r\n            }\r\n        }).catch((err)=>{\r\n            console.log(err)\r\n        })\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                    {\r\n                        data.map((value, i) => {\r\n                            return (\r\n                                <div className='col-md-4' key={i}   >\r\n                                    <div className=\"card\" >\r\n                                        <img src={value.imgUrl} className=\"card-img-top\" alt=\"...\" style={{height: 200}} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title text-capitalize\" style={{ color: \"#083144\" }}>{value.location}</h5>\r\n                                            <p className=\"card-text\">{value.desc}</p>\r\n                                            <Link to={{\r\n                                                pathname: \"/booking\",\r\n                                                // state: value\r\n                                            }} className=\"btn text-white\" style={{backgroundColor: \"#083144\"}} onClick={()=>localStorage.setItem('data',JSON.stringify(value))}>Booking</Link>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport url from \"../../baseUrl/baseURL\";\r\nimport Swal from \"sweetalert2\";\r\nimport moment from \"moment\";\r\nfunction Booking(props) {\r\n  const [valData, setValData] = useState([]);\r\n  const [startDay, setStartDay] = useState(\"\");\r\n  const [endDay, setEndDay] = useState(\"\");\r\n  const [startTime, setStartTime] = useState(\"\");\r\n  const [endTime, setEndTime] = useState(\"\");\r\n  const [slot, setSlot] = useState();\r\n  const [err, setErr] = useState(\"\");\r\n  const [slotBtn, setSlotBtn] = useState(true);\r\n  const [bookBtn, setBookBtn] = useState(false);\r\n  const [log, setLog] = useState(false);\r\n  const [vSlot, setVSlot] = useState(false);\r\n  const data = JSON.parse(localStorage.getItem(\"data\"));\r\n\r\n  const count = [];\r\n  for (let i = 1; i <= data.slots; i++) {\r\n    count.push(i);\r\n  }\r\n\r\n  let startDate = new Date(startDay + \" \" + startTime);\r\n  let endDate = new Date(endDay + \" \" + endTime);\r\n  function bookPark() {\r\n    slot === \"\" || slot === undefined ? setErr(\"Required\") : setLog(true);\r\n    axios({\r\n      method: \"post\",\r\n      url: url + \"/booking\",\r\n      data: {\r\n        location: data.location,\r\n        startDate: Number(startDate),\r\n        endDate: Number(endDate),\r\n        slot: slot,\r\n      },\r\n      withCredentials: true,\r\n    })\r\n      .then((res) => {\r\n        if (res.data.status === 200) {\r\n          console.log(res.data.message);\r\n          Swal.fire(\"Congratulations\", res.data.message, \"success\");\r\n          setVSlot(false);\r\n          setSlotBtn(true);\r\n          setBookBtn(false);\r\n          setEndTime(\"\");\r\n          setStartDay(\"\");\r\n          setStartTime(\"\");\r\n          setEndDay(\"\");\r\n          setLog(false);\r\n        } else {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Oops...\",\r\n            text: res.data.message,\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  let t = new Date(startDate).toLocaleTimeString();\r\n  let t1 = new Date(endDate).toLocaleTimeString();\r\n  t = moment(t, \"h:mm\");\r\n  t1 = moment(t1, \"h:mm\");\r\n  function validateSlot(e) {\r\n    e.preventDefault();\r\n    if (moment(startDay) > moment(endDay)) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"End Date should be equal or greater than start date\",\r\n      });\r\n    } else if (endTime < startTime) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"End time should be greater than start time\",\r\n      });\r\n    }\r\n    else if (t1.diff(t, \"minutes\") <= 14) {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Maximum booking time is 15 minutes\",\r\n      });\r\n    }\r\n    else {\r\n      setLog(true);\r\n      axios({\r\n        method: \"post\",\r\n        url: url + \"/validateSlot\",\r\n        data: {\r\n          startDate: Number(startDate),\r\n          endDate: Number(endDate),\r\n          location: data.location,\r\n        },\r\n        withCredentials: true,\r\n      })\r\n        .then((res) => {\r\n          if (res.data.status === 200) {\r\n            setLog(false);\r\n            setValData(res.data.data);\r\n            setVSlot(true);\r\n            setSlotBtn(false);\r\n            setBookBtn(true);\r\n          } else {\r\n            setValData([]);\r\n            setLog(false);\r\n            setVSlot(true);\r\n            setSlotBtn(false);\r\n            setBookBtn(true);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  var valSlot = [];\r\n  valData.find((val, ind) => {\r\n    const stdb = moment(new Date(val.startDate).toLocaleTimeString(), \"hh:mm\");\r\n    const etdb = moment(new Date(val.endDate).toLocaleTimeString(), \"hh:mm\");\r\n    const stu = moment(new Date(startDate).toLocaleTimeString(), \"hh:mm\");\r\n    const etu = moment(new Date(endDate).toLocaleTimeString(), \"hh:mm\");\r\n    if (\r\n      (etdb.isBetween(stu, etu, null, \"[]\") ||\r\n        stdb.isBetween(stu, etu, null, \"[]\")) &&\r\n      (moment(new Date(val.startDate).toLocaleDateString()).isBetween(\r\n        new Date(startDate).toLocaleDateString(),\r\n        new Date(endDate).toLocaleDateString(),\r\n        null,\r\n        \"[]\"\r\n      ) ||\r\n        moment(new Date(val.endDate).toLocaleDateString()).isBetween(\r\n          new Date(startDate).toLocaleDateString(),\r\n          new Date(endDate).toLocaleDateString(),\r\n          null,\r\n          \"[]\"\r\n        ))\r\n    ) {\r\n      valSlot.push(Number(val.slot));\r\n    }\r\n  });\r\n    var findSlots = count.filter((val) => {\r\n        return valSlot.indexOf(val) < 0;\r\n  });\r\n  function handleSubmit(e) {\r\n    console.log(e.target.name);\r\n    if (e.target.name === \"startDay\") {\r\n      setStartDay(e.target.value);\r\n    } else if (e.target.name === \"startTime\") {\r\n      setStartTime(e.target.value);\r\n    } else if (e.target.name === \"endTime\") {\r\n      setEndTime(e.target.value);\r\n    } else {\r\n      setEndDay(e.target.value);\r\n    }\r\n    setVSlot(false);\r\n    setSlotBtn(true);\r\n    setBookBtn(false);\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row justify-content-center\">\r\n        <div\r\n          className=\"col-md-5 bg-white py-4 px-4 mt-3\"\r\n          style={{ boxShadow: \"0 0 10px grey\" }}\r\n        >\r\n          <h2 className=\"text-center mb-3 text-capitalize\">{data.location}</h2>\r\n          <form onSubmit={validateSlot}>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <label>Start Day</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  min={moment().format(\"YYYY-MM-DD\")}\r\n                  value={startDay}\r\n                  required\r\n                  onChange={handleSubmit}\r\n                  name=\"startDay\"\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <label>End Day</label>\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  min={moment().format(\"YYYY-MM-DD\")}\r\n                  value={endDay}\r\n                  required\r\n                  onChange={handleSubmit}\r\n                  name=\"endDay\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <label>Start Time</label>\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  min={\r\n                    moment().format(\"YYYY-MM-DD\") === startDay\r\n                      ? moment().format(\"HH:mm\")\r\n                      : null\r\n                  }\r\n                  value={startTime}\r\n                  required\r\n                  onChange={handleSubmit}\r\n                  name=\"startTime\"\r\n                />\r\n              </div>\r\n              <div className=\"col\">\r\n                <label>End Time</label>\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  min={\r\n                    moment().format(\"YYYY-MM-DD\") === startDay\r\n                      ? moment().format(\"HH:mm\")\r\n                      : null\r\n                  }\r\n                  required\r\n                  onChange={handleSubmit}\r\n                  name=\"endTime\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                {vSlot ? (\r\n                  <>\r\n                    <label>Select Slots</label>\r\n                    <select\r\n                      className=\"form-control\"\r\n                      required\r\n                      onChange={(e) => setSlot(e.target.value)}\r\n                    >\r\n                      <option>Select Slots</option>\r\n                      {findSlots.map((val, ind) => {\r\n                        return (\r\n                          <option value={val} key={ind}>\r\n                            Slot {val}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </select>\r\n                  </>\r\n                ) : null}\r\n                {err ? (\r\n                  <p className=\"text-danger\" style={{ fontSize: 12 }}>\r\n                    {err}\r\n                  </p>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n            {bookBtn ? (\r\n              <button\r\n                className=\"btn text-white mt-3 w-100\"\r\n                style={{ backgroundColor: \"#083144\" }}\r\n                type=\"button\"\r\n                onClick={bookPark}\r\n              >\r\n                {log ? (\r\n                  <div className=\"text-center mt-2\">\r\n                    <div\r\n                      className=\"spinner-border\"\r\n                      style={{ width: 20, height: 20 }}\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <span>Book</span>\r\n                )}\r\n              </button>\r\n            ) : null}\r\n            {slotBtn ? (\r\n              <button\r\n                className=\"btn text-white mt-3 w-100\"\r\n                style={{ backgroundColor: \"#083144\" }}\r\n                type=\"submit\"\r\n              >\r\n                {log ? (\r\n                  <div className=\"text-center mt-2\">\r\n                    <div\r\n                      className=\"spinner-border\"\r\n                      style={{ width: 20, height: 20 }}\r\n                      role=\"status\"\r\n                    >\r\n                      <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                  </div>\r\n                ) : (\r\n                  <span>Show Slot</span>\r\n                )}\r\n              </button>\r\n            ) : null}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Booking;\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from './../../baseUrl/baseURL'\r\nfunction ViewBooking() {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: url + '/getBookings',\r\n            withCredentials: true,\r\n        }).then((res) => {\r\n            setData(res.data.data)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n    return (\r\n        <div >\r\n            <div className='container'>\r\n                <div className=\"row mt-5\">\r\n                    <table className=\"table\">\r\n                        <thead style={{ backgroundColor: \"#083144\", color: \"#fff\" }}>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Full Name</th>\r\n                                <th scope=\"col\">Slot</th>\r\n                                <th scope=\"col\">Start Date</th>\r\n                                <th scope=\"col\">End Date</th>\r\n                                <th scope=\"col\">Start Time</th>\r\n                                <th scope=\"col\">End Time</th>\r\n                                <th scope=\"col\">Location</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {\r\n                        data.length === 0? <p>No booking you have made</p>: \r\n                            data && data.map((value, index) => {\r\n                                return (\r\n                                    <tbody key={index}>\r\n                                        <tr >\r\n                                            <th scope=\"row\">{index + 1}</th>\r\n                                            <td className='text-capitalize'>{value.firstName + \" \" + value.lastName}</td>\r\n                                            <td>Slot {value.slot}</td>\r\n                                            <td>{new Date(value.startDate).toLocaleDateString()}</td>\r\n                                            <td>{new Date(value.endDate).toLocaleDateString()}</td>\r\n                                            <td>{new Date(value.startDate).toLocaleTimeString()}</td>\r\n                                            <td>{new Date(value.endDate).toLocaleTimeString()}</td>\r\n                                            <td className='text-capitalize'>{value.location}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                )\r\n                            })\r\n                        }\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ViewBooking","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport AreaDetails from './areaDetails'\r\nimport Swal from 'sweetalert2'\r\nfunction AdminDashboard() {\r\n    const [data, setData] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: url + \"/getLocations\",\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            if (res.status === 200) {\r\n                setData(res.data.data)\r\n            } else {\r\n                console.log(res)\r\n            }\r\n        }).catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }, [])\r\n\r\n    function delt(id) {\r\n        const swalWithBootstrapButtons = Swal.mixin({\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-danger'\r\n            },\r\n            buttonsStyling: false\r\n        })\r\n\r\n        swalWithBootstrapButtons.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Yes, delete it!',\r\n            cancelButtonText: 'No, cancel!',\r\n            reverseButtons: true\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                axios({\r\n                    method: 'post',\r\n                    url: url + '/deleteLocation',\r\n                    data: { id: id },\r\n                    withCredentials: true\r\n                }).then((res) => {\r\n                    swalWithBootstrapButtons.fire(\r\n                        'Deleted!',\r\n                        'Your file has been deleted.',\r\n                        'success'\r\n                    )\r\n                    window.location.reload(false);\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                })\r\n            } else if (\r\n                /* Read more about handling dismissals below */\r\n                result.dismiss === Swal.DismissReason.cancel\r\n            ) {\r\n                swalWithBootstrapButtons.fire(\r\n                    'Cancelled',\r\n                    'Your imaginary file is safe :)',\r\n                    'error'\r\n                )\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className='container'>\r\n                <div className='row mt-5'>\r\n                    {\r\n                        data.map((value, i) => {\r\n                            return (\r\n                                <div className='col-md-4' key={i} >\r\n                                    <div className=\"card\">\r\n                                        <img src={value.imgUrl} className=\"card-img-top\" alt=\"...\"\r\n                                            style={{ height: 200, overflow: \"scroll\" }} />\r\n                                        <div className=\"card-body\">\r\n                                            <h5 className=\"card-title text-capitalize\"\r\n                                                style={{ color: \"#083144\" }}>{value.location}</h5>\r\n                                            {/* <p className=\"card-text\" style={{height: 200 , overflow: \"hidden\"}} >{value.desc}</p> */}\r\n                                            <p>Slots {value.slots}</p>\r\n                                            <button className=\"btn btn-danger\" onClick={() => delt(value._id)}>Delete</button>\r\n                                            <button className='btn btn-dark ml-3' onClick={() => {\r\n                                                return (\r\n                                                    Swal.fire({\r\n                                                        title: value.location,\r\n                                                        text: value.desc,\r\n                                                        imageUrl: value.imgUrl,\r\n                                                        imageWidth: 400,\r\n                                                        imageHeight: 200,\r\n                                                        imageAlt: 'Custom image',\r\n                                                    })\r\n                                                )\r\n                                            }}>Details</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminDashboard","import firebaseApp from 'firebase/app'\r\nimport 'firebase/storage'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyDCXEsUcb59iNCf3JBeVaKUrraAsa8A07w\",\r\n    authDomain: \"bloodapp-31bd2.firebaseapp.com\",\r\n    projectId: \"bloodapp-31bd2\",\r\n    storageBucket: \"bloodapp-31bd2.appspot.com\",\r\n    messagingSenderId: \"61197933681\",\r\n    appId: \"1:61197933681:web:c8f2db31707bb4e770cfd0\"\r\n};\r\n// Initialize Firebase\r\nfirebaseApp.initializeApp(firebaseConfig)\r\n\r\nlet Storage = firebaseApp.storage();\r\n\r\nexport default Storage","import React,{useState} from 'react'\r\nimport axios from 'axios'\r\nimport url from '../../baseUrl/baseURL'\r\nimport Swal from 'sweetalert2'\r\nimport Storage from '../../config/firebase'\r\nfunction AddArea() {\r\n    const [imgUrl, setUrl] = useState()\r\n    function addDetails(e) {\r\n        e.preventDefault()\r\n        axios({\r\n            method: 'post',\r\n            url: url + '/addAreaDetails',\r\n            data: {\r\n                location: document.getElementById('location').value,\r\n                slots: document.getElementById('slots').value,\r\n                desc: document.getElementById('desc').value,\r\n                imgURl: imgUrl,\r\n            },\r\n            withCredentials: true\r\n        }).then((res) => {\r\n            console.log(res)\r\n            if (res.data.status === 200) {\r\n                Swal.fire(\r\n                    'Congratulations',\r\n                    res.data.message,\r\n                    'success'\r\n                )\r\n            } else {\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: res.data.message\r\n                })\r\n            }\r\n        }).catch((err) => [\r\n            console.log(err)\r\n\r\n        ])\r\n    }\r\n    const onChangePics = (event) => {\r\n        let images = event.target.files[0];\r\n        const name=Date.now();\r\n        Storage.ref('picture/' + images+name)\r\n            .put(images)\r\n            .then((snapshot) => {\r\n                Swal.fire({\r\n                    position: 'center',\r\n                    title: 'Image is uploading',\r\n                    showConfirmButton: false,\r\n                    timer: 2000,\r\n                  }); \r\n                var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                snapshot.ref.getDownloadURL().then((URL) => {\r\n                    setUrl(URL);\r\n                });\r\n            });\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">\r\n                <h2 className=\"text-center mt-3\">Add Parking Areas</h2>\r\n                <div className=\"col-md-5 bg-white py-4 px-4 mt-3\" style={{ boxShadow: \"0 0 10px grey\" }}>\r\n                        <form onSubmit={addDetails}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Location</label>\r\n                                <input type=\"text\" placeholder=\"Location\" className=\"form-control\" id=\"location\" required />\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <label>Slots</label>\r\n                                <input type=\"number\" placeholder=\"Slots\" className=\"form-control\" id=\"slots\" required />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Description</label>\r\n                                <textarea className=\"form-control\" placeholder=\"Description\" required id=\"desc\" rows=\"3\"></textarea>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\">\r\n                                <label>Area Image</label>\r\n                                <input type=\"file\" className=\"form-control\" \r\n                                onChange={onChangePics}  required />\r\n                            </div>\r\n                        </div>\r\n                        <button className=\"btn text-white mt-3\" style={{ backgroundColor: \"#083144\" }} type=\"submit\">Add</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddArea","import React from 'react'\r\nimport axios from 'axios'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { user } from '../../redux/action/reduxAction'\r\nimport {useDispatch, useSelector } from 'react-redux'\r\nimport URL from '../../baseUrl/baseURL'\r\nfunction Logout() {\r\n    const dispatch = useDispatch()\r\n    const useData = useSelector(state => state.addUser)\r\n    const history = useHistory()\r\n    function logout() {\r\n        axios({\r\n            method: 'get',\r\n            url: URL+'/logout',\r\n            withCredentials: true\r\n        }).then(() => {\r\n            dispatch(user({\r\n                loginStatus: false,\r\n                role: null\r\n            }))\r\n            history.push(\"/login\")\r\n        }, (error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n    return (\r\n        <div className='justify-content-right'>\r\n            <span className=\"text-white mr-3\" style={{textTransform: \"capitalize\"}}>{useData.loginUser.firstName}</span>\r\n            <button className=\"btn btn-light \" onClick={logout}>logout</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logout","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Logout from \"./logout\";\r\nfunction Navbar() {\r\n  const useData = useSelector((state) => state.addUser);\r\n  return (\r\n    <div style={{ backgroundColor: \"#083144\" }}>\r\n      <div className=\"container\">\r\n        <nav className=\"navbar navbar-expand-lg pt-4 pb-4 \">\r\n          <a className=\"navbar-brand text-white\">Booking App</a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNavAltMarkup\"\r\n            aria-controls=\"navbarNavAltMarkup\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\r\n            {useData.role === \"user\" ? (\r\n              <div className=\"navbar-nav\">\r\n                <Link to=\"/\" className=\"nav-item nav-link active text-white\">\r\n                  Areas\r\n                </Link>\r\n                <Link\r\n                  to=\"/viewbooking\"\r\n                  className=\"nav-item nav-link text-white\"\r\n                >\r\n                  View Booking\r\n                </Link>\r\n              </div>\r\n            ) : useData.role === \"admin\" ? (\r\n              <div className=\"navbar-nav\">\r\n                <Link to=\"/\" className=\"nav-item nav-link active text-white\">\r\n                  Areas\r\n                </Link>\r\n                <Link to=\"/addarea\" className=\"nav-item nav-link text-white\">\r\n                  Add Area\r\n                </Link>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n          <Logout />\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useEffect } from 'react'\r\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from '../login/login'\r\nimport Signup from '../signup/signup'\r\nimport Dashboard from '../user/dashboard'\r\nimport Booking from './../user/booking'\r\nimport ViewBooking from '../user/viewbooking'\r\nimport AdminDasboard from '../admin/adminDash'\r\nimport AddArea from '../admin/areas'\r\nimport Navbar from './navbar'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport axios from 'axios'\r\nimport url from './../../baseUrl/baseURL'\r\nimport { user } from '../../redux/action/reduxAction'\r\n\r\nfunction RouterConfig() {\r\n\r\n    const useData = useSelector((state) => state.addUser)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        axios({\r\n            method: \"get\",\r\n            url: url + `/profile`,\r\n            withCredentials: true\r\n        })\r\n            .then((res) => {\r\n                if (res.data.status === 200) {\r\n                    dispatch(user({\r\n                        loginUser: res.data.profile,\r\n                        loginStatus: true,\r\n                        role: res.data.profile.role\r\n                    }));\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                if (err) {\r\n                    dispatch(user({ loginStatus: false }));\r\n                }\r\n            });\r\n        return () => {\r\n            console.log(\"cleanup\");\r\n        };\r\n    }, [dispatch]);\r\n\r\n    if (useData.loginUser === null) {\r\n        return (\r\n            <div className='container'>\r\n                <div className=\"d-flex align-items-center justify-content-center \" style={{ width: \"100%\", height: \"100vh\" }}>\r\n                    <div className=\"spinner-border \" role=\"status\">\r\n                        <span className=\"sr-only\">Loading...</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n\r\n        <Router>\r\n            {useData.loginStatus === false ?\r\n                <div>\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Signup} />\r\n                        <Route path=\"/login\" component={Login} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </div> : null}\r\n\r\n            {useData.role === 'user' ?\r\n                <>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Dashboard} />\r\n                        <Route path=\"/booking\" component={Booking} />\r\n                        <Route path=\"/viewbooking\" component={ViewBooking} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </> : null\r\n            }\r\n            {useData.role === 'admin' ?\r\n                <>\r\n                    <Navbar />\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={AdminDasboard} />\r\n                        <Route path=\"/addarea\" component={AddArea} />\r\n                        <Route path=\"*\" >\r\n                            <Redirect to=\"/\" />\r\n                        </Route >\r\n                    </Switch>\r\n                </> : null\r\n            }\r\n        </Router>\r\n    )\r\n}\r\nexport default RouterConfig","import RouterConfig from './component/router/route'\n\nfunction App() {\n  return (\n      <RouterConfig/>\n  );\n}\n\nexport default App;\n","let initialState = {\r\n    loginUser: null,\r\n    loginStatus: false,\r\n    role: null\r\n}\r\nconst addUser = (state = initialState, action) =>{\r\n    switch(action.type){\r\n        case \"ADD_USER\": \r\n        return{\r\n            ...action.payload,\r\n            // ...state\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default addUser","import addUser from './reducers'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst rootReducer = combineReducers({\r\n    addUser\r\n})\r\n\r\nexport default rootReducer","import {createStore} from 'redux'\r\n\r\nimport rootReducer from '../reducer/index'\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport store from './redux/store/store'\nimport { Provider } from 'react-redux'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}